digraph AST {
node0 [label="<program>",lexeme=""];
node1 [label="<function_decl>",lexeme=""];
node2 [label="int",lexeme=""];
node1 -> node2;
node3 [label="ID",lexeme="main"];
node1 -> node3;
node4 [label="<args>",lexeme=""];
node1 -> node4;
node5 [label="<stmts>",lexeme=""];
node6 [label="<var_decl>",lexeme=""];
node7 [label="ID",lexeme="y"];
node6 -> node7;
node8 [label="INTLITERAL",lexeme="5"];
node6 -> node8;
node5 -> node6;
node9 [label="<func call>",lexeme=""];
node10 [label="ID",lexeme="print_int"];
node9 -> node10;
node11 [label="<exps>",lexeme=""];
node12 [label="ID",lexeme="y"];
node11 -> node12;
node9 -> node11;
node5 -> node9;
node13 [label="<func call>",lexeme=""];
node14 [label="ID",lexeme="print_string"];
node13 -> node14;
node15 [label="<exps>",lexeme=""];
node16 [label="STRINGLITERAL",lexeme="\n"];
node15 -> node16;
node13 -> node15;
node5 -> node13;
node17 [label="IF",lexeme=""];
node18 [label="GREAT",lexeme=""];
node19 [label="ID",lexeme="y"];
node18 -> node19;
node20 [label="INTLITERAL",lexeme="0"];
node18 -> node20;
node17 -> node18;
node21 [label="<stmts>",lexeme=""];
node22 [label="<var_decl>",lexeme=""];
node23 [label="ID",lexeme="is_y_positive"];
node22 -> node23;
node24 [label="TRUE",lexeme=""];
node22 -> node24;
node21 -> node22;
node25 [label="<func call>",lexeme=""];
node26 [label="ID",lexeme="print_bool"];
node25 -> node26;
node27 [label="<exps>",lexeme=""];
node28 [label="ID",lexeme="is_y_positive"];
node27 -> node28;
node25 -> node27;
node21 -> node25;
node17 -> node21;
node29 [label="ELSE",lexeme=""];
node30 [label="<stmts>",lexeme=""];
node31 [label="<var_decl>",lexeme=""];
node32 [label="ID",lexeme="is_y_positive"];
node31 -> node32;
node33 [label="FALSE",lexeme=""];
node31 -> node33;
node30 -> node31;
node34 [label="<func call>",lexeme=""];
node35 [label="ID",lexeme="print_bool"];
node34 -> node35;
node36 [label="<exps>",lexeme=""];
node37 [label="ID",lexeme="is_y_positive"];
node36 -> node37;
node34 -> node36;
node30 -> node34;
node29 -> node30;
node17 -> node29;
node5 -> node17;
node38 [label="RETURN",lexeme=""];
node39 [label="INTLITERAL",lexeme="0"];
node38 -> node39;
node5 -> node38;
node1 -> node5;
node0 -> node1;
}