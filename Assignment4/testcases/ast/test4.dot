digraph AST {
node0 [label="<program>",lexeme=""];
node1 [label="<function_decl>",lexeme=""];
node2 [label="int",lexeme=""];
node1 -> node2;
node3 [label="ID",lexeme="main"];
node1 -> node3;
node4 [label="<args>",lexeme=""];
node1 -> node4;
node5 [label="<stmts>",lexeme=""];
node6 [label="FOR",lexeme=""];
node7 [label="<var_decls>",lexeme=""];
node8 [label="<var_decl>",lexeme=""];
node9 [label="ID",lexeme="i"];
node8 -> node9;
node10 [label="INTLITERAL",lexeme="0"];
node8 -> node10;
node7 -> node8;
node6 -> node7;
node11 [label="LESS",lexeme=""];
node12 [label="ID",lexeme="i"];
node11 -> node12;
node13 [label="INTLITERAL",lexeme="10"];
node11 -> node13;
node6 -> node11;
node14 [label="ASSIGN",lexeme=""];
node15 [label="ID",lexeme="i"];
node14 -> node15;
node16 [label="PLUS",lexeme=""];
node17 [label="ID",lexeme="i"];
node16 -> node17;
node18 [label="INTLITERAL",lexeme="1"];
node16 -> node18;
node14 -> node16;
node6 -> node14;
node19 [label="<stmts>",lexeme=""];
node20 [label="<func call>",lexeme=""];
node21 [label="ID",lexeme="print_int"];
node20 -> node21;
node22 [label="<exps>",lexeme=""];
node23 [label="ID",lexeme="i"];
node22 -> node23;
node20 -> node22;
node19 -> node20;
node24 [label="<func call>",lexeme=""];
node25 [label="ID",lexeme="print_string"];
node24 -> node25;
node26 [label="<exps>",lexeme=""];
node27 [label="STRINGLITERAL",lexeme="\n"];
node26 -> node27;
node24 -> node26;
node19 -> node24;
node6 -> node19;
node5 -> node6;
node28 [label="RETURN",lexeme=""];
node29 [label="INTLITERAL",lexeme="0"];
node28 -> node29;
node5 -> node28;
node1 -> node5;
node0 -> node1;
}